import { useMemo } from 'react'
import { type MRT_ColumnDef } from 'material-react-table'
import { CrossSearch, SimplifiedLocality } from '@/shared/types'
import { TableView } from '../TableView/TableView'
import { useGetAllCrossSearchQuery, useGetAllCrossSearchLocalitiesQuery } from '@/redux/crossSearchReducer'
import { usePageContext } from '../Page'
import { LocalitiesMap } from '../Map/LocalitiesMap'

export const CrossSearchTable = ({ selectorFn }: { selectorFn?: (newObject: CrossSearch) => void }) => {
  const { sqlLimit, sqlOffset, sqlColumnFilters, sqlOrderBy } = usePageContext()
  const { data: crossSearchQueryData, isFetching } = useGetAllCrossSearchQuery({
    limit: sqlLimit,
    offset: sqlOffset,
    columnFilters: sqlColumnFilters,
    sorting: sqlOrderBy,
  })

  const { data: localitiesData, isFetching: localitiesFetching } = useGetAllCrossSearchLocalitiesQuery({
    columnFilters: sqlColumnFilters,
    sorting: sqlOrderBy,
  })

  // Show/Hide columns in the following order
  const columns = useMemo<MRT_ColumnDef<CrossSearch>[]>(
    () => [
      {
        accessorKey: 'lid_now_loc',
        header: 'Locality Id',
        size: 20,
        enableColumnFilterModes: false,
      },
      {
        id: 'loc_name',
        accessorFn: row => row.loc_name || '',
        header: 'Locality name',
        enableHiding: false,
        filterFn: 'contains',
      },
      {
        accessorKey: 'dms_lat',
        header: 'DMS lat',
        enableColumnFilterModes: false,
      },
      {
        accessorKey: 'dms_long',
        header: 'DMS long',
        enableColumnFilterModes: false,
      },
      {
        accessorKey: 'dec_lat',
        header: 'Dec lat',
        filterVariant: 'range',
        enableColumnFilterModes: false,
      },
      {
        accessorKey: 'dec_long',
        header: 'Dec long',
        filterVariant: 'range',
        enableColumnFilterModes: false,
      },
      {
        accessorKey: 'altitude',
        header: 'Altitude',
        enableColumnFilterModes: false,
      },
      {
        accessorKey: 'max_age',
        header: 'Max age',
        filterVariant: 'range',
        enableColumnFilterModes: false,
        Cell: ({ cell }) => (cell.getValue() as number).toFixed(3),
      },
      {
        id: 'bfa_max',
        accessorFn: row => row.bfa_max || '',
        header: 'BFA max',
        filterFn: 'contains',
      },
      {
        id: 'bfa_max_abs',
        accessorFn: row => row.bfa_max_abs || '',
        header: 'BFA max abs',
        filterFn: 'contains',
      },
      {
        accessorKey: 'frac_max',
        header: 'Frac max',
        enableColumnFilterModes: false,
      },
      {
        accessorKey: 'min_age',
        header: 'Min age',
        filterVariant: 'range',
        enableColumnFilterModes: false,
        Cell: ({ cell }) => (cell.getValue() as number).toFixed(3),
      },
      {
        id: 'bfa_min',
        accessorFn: row => row.bfa_min || '',
        header: 'BFA min',
        filterFn: 'contains',
      },
      {
        id: 'bfa_min_abs',
        accessorFn: row => row.bfa_min_abs || '',
        header: 'BFA min abs',
        filterFn: 'contains',
      },
      {
        accessorKey: 'frac_min',
        header: 'Frac min',
        enableColumnFilterModes: false,
      },
      {
        id: 'chron',
        accessorFn: row => row.chron || '',
        header: 'Chron',
        filterFn: 'contains',
      },
      {
        id: 'age_comm',
        accessorFn: row => row.age_comm || '',
        header: 'Age comment',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'basin',
        accessorFn: row => row.basin || '',
        header: 'Basin',
        filterFn: 'contains',
      },
      {
        id: 'subbasin',
        accessorFn: row => row.subbasin || '',
        header: 'Subbasin',
        filterFn: 'contains',
      },
      {
        id: 'plate',
        accessorFn: row => row.plate || '',
        header: 'Plate',
        filterFn: 'contains',
      },
      {
        id: 'formation',
        accessorFn: row => row.formation || '',
        header: 'Formation',
        filterFn: 'contains',
      },
      {
        id: 'member',
        accessorFn: row => row.member || '',
        header: 'Member',
        filterFn: 'contains',
      },
      {
        id: 'bed',
        accessorFn: row => row.bed || '',
        header: 'Bed',
        filterFn: 'contains',
      },
      {
        id: 'country',
        accessorFn: row => row.country || '',
        header: 'Country',
        enableHiding: false,
        filterFn: 'contains',
      },
      {
        id: 'state',
        accessorFn: row => row.state || '',
        header: 'State',
        filterFn: 'contains',
      },
      {
        id: 'county',
        accessorFn: row => row.county || '',
        header: 'County',
        filterFn: 'contains',
      },
      {
        id: 'appr_num_spm',
        accessorFn: row => row.appr_num_spm || '',
        header: 'Approx. Number of Specimens',
        size: 20,
        filterVariant: 'range',
        enableColumnFilterModes: false,
      },
      {
        id: 'gen_loc',
        accessorFn: row => row.gen_loc || '',
        header: 'General Locality',
        filterFn: 'contains',
      },
      {
        id: 'estimate_precip',
        accessorFn: row => row.estimate_precip || '',
        header: 'Estimate of annual precipitation (mm)',
        size: 20,
        filterVariant: 'range',
        enableColumnFilterModes: false,
      },
      {
        id: 'estimate_temp',
        accessorFn: row => row.estimate_temp || '',
        header: 'Estimate of mean annual temperature (Â°C)',
        size: 20,
        filterVariant: 'range',
        enableColumnFilterModes: false,
      },
      {
        id: 'estimate_npp',
        accessorFn: row => row.estimate_npp || '',
        header: 'Estimate of net primary productivity (g/m2/yr)',
        size: 20,
        filterVariant: 'range',
        enableColumnFilterModes: false,
      },
      {
        id: 'pers_woody_cover',
        accessorFn: row => row.pers_woody_cover || '',
        header: 'Woody cover percentage',
        size: 20,
        filterVariant: 'range',
        enableColumnFilterModes: false,
      },
      {
        id: 'pers_pollen_ap',
        accessorFn: row => row.pers_pollen_ap || '',
        header: 'Arboreal pollen (AP%)',
        size: 20,
        filterVariant: 'range',
        enableColumnFilterModes: false,
      },
      {
        id: 'pers_pollen_nap',
        accessorFn: row => row.pers_pollen_nap || '',
        header: 'Non-arboreal pollen (NAP%)',
        size: 20,
        filterVariant: 'range',
        enableColumnFilterModes: false,
      },
      {
        id: 'pers_pollen_other',
        accessorFn: row => row.pers_pollen_other || '',
        header: 'Other pollen (OP%)',
        size: 20,
        filterVariant: 'range',
        enableColumnFilterModes: false,
      },
      {
        id: 'hominin_skeletal_remains',
        accessorFn: row => row.hominin_skeletal_remains || '',
        header: 'Hominin skeletal remains',
        size: 20,
        enableColumnFilterModes: false,
      },
      {
        id: 'bipedal_footprints',
        accessorFn: row => row.bipedal_footprints || '',
        header: 'Bipedal footprints',
        size: 20,
        enableColumnFilterModes: false,
      },
      {
        id: 'stone_tool_cut_marks_on_bones',
        accessorFn: row => row.stone_tool_cut_marks_on_bones || '',
        header: 'Stone tool cut marks on bones',
        size: 20,
        enableColumnFilterModes: false,
      },
      {
        id: 'stone_tool_technology',
        accessorFn: row => row.stone_tool_technology || '',
        header: 'Stone tool technology',
        size: 20,
        enableColumnFilterModes: false,
      },
      {
        id: 'technological_mode_1',
        accessorFn: row => row.technological_mode_1 || '',
        header: 'Technological mode 1',
        size: 20,
        enableColumnFilterModes: false,
      },
      {
        id: 'technological_mode_2',
        accessorFn: row => row.technological_mode_2 || '',
        header: 'Technological mode 2',
        size: 20,
        enableColumnFilterModes: false,
      },
      {
        id: 'technological_mode_3',
        accessorFn: row => row.technological_mode_3 || '',
        header: 'Technological mode 3',
        size: 20,
        enableColumnFilterModes: false,
      },
      {
        id: 'cultural_stage_1',
        accessorFn: row => row.cultural_stage_1 || '',
        header: 'Cultural stage 1',
        filterFn: 'contains',
      },
      {
        id: 'cultural_stage_2',
        accessorFn: row => row.cultural_stage_2 || '',
        header: 'Cultural stage 2',
        filterFn: 'contains',
      },
      {
        id: 'cultural_stage_3',
        accessorFn: row => row.cultural_stage_3 || '',
        header: 'Cultural stage 3',
        filterFn: 'contains',
      },
      {
        id: 'regional_culture_1',
        accessorFn: row => row.regional_culture_1 || '',
        header: 'Regional culture 1',
        filterFn: 'contains',
      },
      {
        id: 'regional_culture_2',
        accessorFn: row => row.regional_culture_2 || '',
        header: 'Regional culture 2',
        filterFn: 'contains',
      },
      {
        id: 'regional_culture_3',
        accessorFn: row => row.regional_culture_3 || '',
        header: 'Regional culture 3',
        filterFn: 'contains',
      },
      {
        accessorKey: 'species_id_com_species',
        header: 'Species ID',
        size: 20,
        enableColumnFilterModes: false,
        sortingFn: 'alphanumeric',
      },
      {
        id: 'order_name',
        accessorFn: row => row.order_name || '',
        header: 'Order',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'family_name',
        accessorFn: row => row.family_name || '',
        header: 'Family',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'genus_name',
        accessorFn: row => row.genus_name || '',
        header: 'Genus',
        size: 20,
        enableHiding: false,
        filterFn: 'contains',
      },
      {
        id: 'species_name',
        accessorFn: row => row.species_name || '',
        header: 'Species',
        size: 20,
        enableHiding: false,
        filterFn: 'contains',
      },
      {
        id: 'subclass_or_superorder_name',
        accessorFn: row => row.subclass_or_superorder_name || '',
        header: 'Subclass or Superorder',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'suborder_or_superfamily_name',
        accessorFn: row => row.suborder_or_superfamily_name || '',
        header: 'Suborder or Superfamily',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'subfamily_name',
        accessorFn: row => row.subfamily_name || '',
        header: 'Subfamily or Tribe',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'unique_identifier',
        accessorFn: row => row.unique_identifier || '',
        header: 'Unique Identifier',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'taxonomic_status',
        accessorFn: row => row.taxonomic_status || '',
        header: 'Taxonomic Status',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'orig_entry',
        accessorFn: row => row.orig_entry || '',
        header: 'Additional Information',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'source_name',
        accessorFn: row => row.source_name || '',
        header: 'Source Name',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'microwear_now_ls',
        accessorFn: row => row.microwear_now_ls || '',
        header: 'LS Microwear',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'mesowear_now_ls',
        accessorFn: row => row.mesowear_now_ls || '',
        header: 'LS Mesowear',
        size: 10,
        filterFn: 'contains',
      },
      {
        id: 'mw_or_high_now_ls',
        accessorFn: row => row.mw_or_high_now_ls || '',
        header: 'LS Cusp Relief High',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'mw_or_low_now_ls',
        accessorFn: row => row.mw_or_low_now_ls || '',
        header: 'LS Cusp Relief Low',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'mw_cs_sharp_now_ls',
        accessorFn: row => row.mw_cs_sharp_now_ls || '',
        header: 'LS Cusp Shape Sharp',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'mw_cs_round_now_ls',
        accessorFn: row => row.mw_cs_round_now_ls || '',
        header: 'LS Cusp Shape Rounded',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'mw_cs_blunt_now_ls',
        accessorFn: row => row.mw_cs_blunt_now_ls || '',
        header: 'LS Cusp Shape Blunt',
        size: 20,
        filterFn: 'contains',
      },

      {
        id: 'sv_length',
        accessorFn: row => row.sv_length || '',
        header: 'Snout-Vent Length',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'body_mass_com_species',
        accessorFn: row => row.body_mass_com_species || '',
        header: 'Body Mass',
        size: 20,
        filterVariant: 'range',
        enableColumnFilterModes: false,
      },
      {
        id: 'sd_size',
        accessorFn: row => row.sd_size || '',
        header: 'Sexual Dimorphism - Size',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'sd_display',
        accessorFn: row => row.sd_display || '',
        header: 'Sexual Dimorphism - Display',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'tshm',
        accessorFn: row => row.tshm || '',
        header: 'Tooth Shape - Multicuspids',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'tht',
        accessorFn: row => row.tht || '',
        header: 'Hypsodonty',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'horizodonty',
        accessorFn: row => row.horizodonty || '',
        header: 'Horizodonty',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'crowntype',
        accessorFn: row => row.crowntype || '',
        header: 'Developmental Crown Type',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'cusp_shape',
        accessorFn: row => row.cusp_shape || '',
        header: 'Cusp shape',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'cusp_count_buccal',
        accessorFn: row => row.cusp_count_buccal || '',
        header: 'Buccal cusp count',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'cusp_count_lingual',
        accessorFn: row => row.cusp_count_lingual || '',
        header: 'Lingual cusp count',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'loph_count_lon',
        accessorFn: row => row.loph_count_lon || '',
        header: 'Longitudinal loph count',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'loph_count_trs',
        accessorFn: row => row.loph_count_trs || '',
        header: 'Transverse loph count',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'fct_al',
        accessorFn: row => row.fct_al || '',
        header: 'Presence of acute lophs (AL)',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'fct_ol',
        accessorFn: row => row.fct_ol || '',
        header: 'Presence of obtuse or basin-like lophs (OL)',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'fct_sf',
        accessorFn: row => row.fct_sf || '',
        header: 'Structural fortification of cusps (SF)',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'fct_ot',
        accessorFn: row => row.fct_ot || '',
        header: 'Occlusal topography (OT)',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'fct_cm',
        accessorFn: row => row.fct_cm || '',
        header: 'Coronal cementum (CM)',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'microwear_com_species',
        accessorFn: row => row.microwear_com_species || '',
        header: 'Microwear',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'mesowear_com_species',
        accessorFn: row => row.mesowear_com_species || '',
        header: 'Mesowear',
        size: 20,
        filterFn: 'contains',
      },

      {
        id: 'mw_or_high_com_species',
        accessorFn: row => row.mw_or_high_com_species || '',
        header: 'Cusp Relief High',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'mw_or_low_com_species',
        accessorFn: row => row.mw_or_low_com_species || '',
        header: 'Cusp Relief Low',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'mw_cs_sharp_com_species',
        accessorFn: row => row.mw_cs_sharp_com_species || '',
        header: 'Cusp Shape Sharp',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'mw_cs_round_com_species',
        accessorFn: row => row.mw_cs_round_com_species || '',
        header: 'Cusp Shape Rounded',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'mw_cs_blunt_com_species',
        accessorFn: row => row.mw_cs_blunt_com_species || '',
        header: 'Cusp Shape Blunt',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'diet1',
        accessorFn: row => row.diet1 || '',
        header: 'Diet 1',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'diet2',
        accessorFn: row => row.diet2 || '',
        header: 'Diet 2',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'diet3',
        accessorFn: row => row.diet3 || '',
        header: 'Diet 3',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'locomo1',
        accessorFn: row => row.locomo1 || '',
        header: 'Locomotion 1',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'locomo2',
        accessorFn: row => row.locomo2 || '',
        header: 'Locomotion 2',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'locomo3',
        accessorFn: row => row.locomo3 || '',
        header: 'Locomotion 3',
        size: 20,
        filterFn: 'contains',
      },
      {
        id: 'sp_comment',
        accessorFn: row => row.sp_comment || '',
        header: 'Comment',
        size: 20,
        filterFn: 'contains',
      },
    ],
    []
  )

  const visibleColumns = {
    lid: false,
    loc_name: true,
    dms_lat: false,
    dms_long: false,
    dec_lat: false,
    dec_long: false,
    altitude: false,
    max_age: false,
    bfa_max: false,
    bfa_max_abs: false,
    frac_max: false,
    min_age: false,
    bfa_min: false,
    bfa_min_abs: false,
    frac_min: false,
    chron: false,
    age_comm: false,
    basin: false,
    subbasin: false,
    plate: false,
    formation: false,
    member: false,
    bed: false,
    country: true,
    state: false,
    county: false,
    appr_num_spm: false,
    gen_loc: false,
    estimate_precip: false,
    estimate_temp: false,
    estimate_npp: false,
    pers_woody_cover: false,
    pers_pollen_ap: false,
    pers_pollen_nap: false,
    pers_pollen_other: false,
    hominin_skeletal_remains: false,
    bipedal_footprints: false,
    stone_tool_cut_marks_on_bones: false,
    stone_tool_technology: false,
    technological_mode_1: false,
    technological_mode_2: false,
    technological_mode_3: false,
    cultural_stage_1: false,
    cultural_stage_2: false,
    cultural_stage_3: false,
    regional_culture_1: false,
    regional_culture_2: false,
    regional_culture_3: false,
    com_species_id: false,
    now_species_id: false,
    subclass_or_superorder_name: false,
    order_name: false,
    suborder_or_superfamily_name: false,
    family_name: false,
    subfamily_name: false,
    unique_identifier: false,
    taxonomic_status: false,
    orig_entry: false,
    source_name: false,
    microwear_now_ls: false,
    mesowear_now_ls: false,
    mw_or_high_now_ls: false,
    mw_or_low_now_ls: false,
    mw_cs_sharp_now_ls: false,
    mw_cs_round_now_ls: false,
    mw_cs_blunt_now_ls: false,
    sv_length: false,
    body_mass_com_species: false,
    sd_size: false,
    sd_display: false,
    tshm: false,
    tht: false,
    horizodonty: false,
    crowntype: false,
    cusp_shape: false,
    cusp_count_buccal: false,
    cusp_count_lingual: false,
    loph_count_lon: false,
    loph_count_trs: false,
    fct_al: false,
    fct_ol: false,
    fct_sf: false,
    fct_ot: false,
    fct_cm: false,
    microwear_com_species: false,
    mesowear_com_species: false,
    mw_or_high_com_species: false,
    mw_or_low_com_species: false,
    mw_cs_sharp_com_species: false,
    mw_cs_round_com_species: false,
    mw_cs_blunt_com_species: false,
    diet1: false,
    diet2: false,
    diet3: false,
    locomo1: false,
    locomo2: false,
    locomo3: false,
    sp_comment: false,
  }

  const checkRowRestriction = (row: CrossSearch) => {
    return !!row.loc_status
  }

  return (
    <>
      <LocalitiesMap localitiesQueryData={localitiesData} localitiesQueryIsFetching={localitiesFetching} />
      <TableView<CrossSearch>
        title="Locality-Species-Cross-Search"
        selectorFn={selectorFn}
        checkRowRestriction={checkRowRestriction}
        idFieldName="lid_now_loc"
        columns={columns}
        isFetching={isFetching}
        visibleColumns={visibleColumns}
        data={crossSearchQueryData}
        url="crosssearch"
        enableColumnFilterModes={true}
        serverSidePagination={true}
        isCrossSearchTable={true}
      />
    </>
  )
}
